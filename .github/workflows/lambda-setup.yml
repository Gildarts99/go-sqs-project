name: lambda setup

on: 
  push:
    branches:
      - 'main'

env:
  AWS_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role-go-sqs
  AWS_REGION: us-east-1
  LAMBDA_FUNCTION_NAME: go-sqs-lambda-test
  REPOSITORY_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
  REPOSITORY: go-sqs-queue

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      -
        name: configure environment variable
        run: echo "DOCKER_IMAGE_URI=${{ env.REPOSITORY_URL }}/${{ env.REPOSITORY }}:latest" >> $GITHUB_ENV
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: githubActionsSession
          aws-region: ${{ env.AWS_REGION }}
      - 
        name: auth to docker
        run: aws ecr get-login-password --region ${{env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.REPOSITORY_URL }}
      - 
        name: Build Image
        working-directory: './lambda_function'
        run: docker build -t ${{ env.DOCKER_IMAGE_URI }} .
      -
        name: Push Image
        run: docker push ${{ env.DOCKER_IMAGE_URI }}
      - 
        name: update lambda function
        run: |
          aws lambda get-function --function-name ${{ env.LAMBDA_FUNCTION_NAME }} 2> /dev/null
          if [[ $? -ne 0 ]]; then
              echo "Lambda function ${{ env.LAMBDA_FUNCTION_NAME }} does not exist currently"
          else
              echo "Updating lambda function"
              aws lambda update-function-code --function-name ${{ env.LAMBDA_FUNCTION_NAME }} --image-uri ${{ env.DOCKER_IMAGE_URI }}
          fi

        